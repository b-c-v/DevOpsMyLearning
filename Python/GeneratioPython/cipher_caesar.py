# программу, способную шифровать и дешифровать текст в соответствии с алгоритмом Цезаря.
# Она должна запрашивать у пользователя следующие данные:
# - направление: шифрование или дешифрование;
# - язык алфавита: русский или английский;
# - шаг сдвига (со сдвигом вправо).
# Примечание 1. Считайте, что в русском языке 32 буквы (буква ё отсутствует).
# Примечание 2. Неалфавитные символы — знаки препинания, пробелы, цифры — не меняются.
# Примечание 3. Сохраните регистр символов. Например, текст: "Умом Россию не понять" при сдвиге на одну позицию вправо будет преобразован в: "Фнпн Спттйя ож рпоауэ".

"""
Математическая модель
Если сопоставить каждый символ алфавита с его порядковым номером (нумеруя с 0), то шифрование и дешифрование можно выразить формулами модульной арифметики:
 y=(x+k) mod   n
 x=(y−k) mod n
x — символ открытого текста
y — символ шифрованного текста
n — мощность алфавита (количество символов)
k — ключ
Под операцией mod подразумевается операция нахождения остатка. В языке Python для нахождения остатка от деления двух чисел, мы используем оператор %.
"""

k = int(input('Введите шаг сдвига для шифровки ( >0 ) или дешифровки ( <0 ): '))
en_alphabet = [chr(i) for i in range(65,91)] + [chr(j) for j in range(97,123)]
ru_alphabet = [chr(i) for i in range(1040,1104)]
def caesar(text):
    if txt[0] in en_alphabet:
        alphabet = en_alphabet
        n = 26
    else:
        alphabet = ru_alphabet
        n = 32
    for i in range(len(text)):
        if text[i].isalpha():
            x = alphabet.index(text[i])
            if text[i].isupper():
                print(alphabet[(x + k) % n], end = '')
            else:
                print(alphabet[(x + k) % n + n], end='')
        else:
            print(text[i], end = '')
    print()
txt = input('Введите текст: ')
caesar(txt)