# клиента, который подключается к серверу по TCP-соединению, отправляет сообщения и получает ответы, пока пользователь не введёт "bye".

import socket  # Импортируем модуль socket для работы с сетевыми соединениями

host_name = (
    socket.gethostname()
)  # Получаем имя локального хоста (например, 'DESKTOP-123ABC')
port = 5000  # Указываем порт, на котором ожидается соединение с сервером

# Создаём объект сокета: AF_INET означает IPv4, SOCK_STREAM — TCP-соединение
c_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

# Подключаемся к серверу по имени хоста и порту
# Функция connect() ожидает один аргумент, но этот аргумент должен быть кортежем из двух элементов. Внутренние скобки (host_name, port) создают кортеж из двух элементов. Внешние скобки — это обычные скобки вызова функции connect().
c_socket.connect((host_name, port))

# Запрашиваем ввод сообщения у пользователя
msg = input(" -> ")

# Запускаем цикл, который продолжается, пока пользователь не введёт "bye"
while msg.lower().strip() != "bye":
    # Отправляем сообщение серверу (переводим в байты)
    c_socket.sendall(msg.encode())
    # Получаем ответ от сервера (до 1024 байт), декодируем из байтов в строку
    recv_data = c_socket.recv(1024).decode()
    print("Received from server: " + recv_data)  # Выводим полученное сообщение на экран
    msg = input(" -> ")  # Снова запрашиваем ввод нового сообщения

c_socket.close()  # Закрываем соединение после выхода из цикла
