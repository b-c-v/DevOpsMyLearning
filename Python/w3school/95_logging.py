# Настройка базовой конфигурации логгирования
# Импорт модуля logging, который используется для ведения журнала (логирования) сообщений
import logging

"""
Уровень      Значение    Описание
CRITICAL        50      Критические ошибки, из-за которых программа может завершиться
ERROR           40      Ошибки выполнения, не критичные, но важные
WARNING         30      Предупреждения о возможных проблемах
INFO            20      Информационные сообщения о нормальной работе
DEBUG           10      Отладочная информация
NOTSET           0      Специальный уровень, обычно не используется напрямую
"""

# level задает уровень логирования.  Устанавливает минимальный уровень логов, которые будут отображаться. В данном случае, DEBUG — это самый низкий уровень, поэтому показываются все сообщения: от DEBUG до CRITICAL.
# logging.basicConfig(level=logging.DEBUG)

# Можно указывать уровень логирования в виде числа
# logging.basicConfig(level=10)

# filename лог-сообщения будут сохраняться в указанный файл (а не выводиться в консоль)
# logging.basicConfig(filename="example.log", level=logging.DEBUG)

# format задаёт шаблон формата лог-сообщений:
"""
%(asctime)s            Время создания записи (можно настроить формат времени отдельно через datefmt)
%(created)f            Время в формате time.time() (секунды с плавающей точкой с начала эпохи)
%(msecs)d              Миллисекунды из времени события
%(levelname)s          Уровень логирования (например, DEBUG, INFO)
%(levelno)s            Числовое значение уровня (например, 10 для DEBUG)
%(message)s            Текст сообщения
%(name)s               Имя логгера (обычно __name__)
%(module)s             Имя модуля, в котором вызван лог
%(filename)s           Имя файла, из которого вызван лог
%(pathname)s           Полный путь до файла
%(lineno)d             Номер строки, на которой вызван лог
%(funcName)s           Имя функции, из которой вызван лог
%(thread)d             ID потока
%(threadName)s         Имя потока
%(process)d            ID процесса
%(processName)s        Имя процесса
%(relativeCreated)d    Время с момента запуска логгера (в миллисекундах)
"""

logging.basicConfig(
    format="%(asctime)s (%(process)d) - %(levelname)s: %(message)s",
    level=logging.DEBUG,
)


# Логирование критического сообщения — самый высокий уровень серьезности
logging.critical(
    "Example of critical log"
)  # Критическая ошибка, например, сбой системы

# Логирование сообщения об ошибке — уровень ERROR
logging.error(
    "Example of error log"
)  # Ошибка, из-за которой программа не может выполнить определённую операцию

# Логирование предупреждения — уровень WARNING
logging.warning("Example of warning log")  # Предупреждение о потенциальной проблеме

# Логирование информационного сообщения — уровень INFO
logging.info("Example of info log")  # Общая информация о ходе выполнения программы

# Логирование отладочного сообщения — уровень DEBUG
logging.debug("Example of debug log")  # Подробная информация для отладки
