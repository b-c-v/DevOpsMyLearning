# upstream directive is used to define a group of backend servers that can handle requests. It allows Nginx to distribute incoming requests among multiple servers, providing load balancing and redundancy.
# proxy_pass is used within a location block to specify the protocol and address of a proxied server. It forwards the request to the specified upstream server group, enabling Nginx to act as a reverse proxy.

# docker container  run --name mynginx -v ./bloggingtemplate:/usr/share/nginx/html -v ./16_upstream_proxy_pass.conf:/etc/nginx/nginx.conf -d -p 80:80 nginx:1.27.0


events {
}

http {
    include mime.types;

    # The upstream block defines a group of backend servers that Nginx can proxy requests to.
    upstream appserver {
        server weldering.com fail_timeout=30s max_fails=5;
        server google.com;
    }

    server {
        location / {
            # Nginx passes requests to the upstream group named 'appserver'.
            # It forwards the incoming request to one of the servers defined in the upstream block.
            # Nginx will handle load balancing between the servers automatically.
            proxy_pass http://appserver;
            # If use curl http://localhost, Nginx translates it into a request to one of the upstream servers (e.g., weldering.com or google.com). appserver is a name known only to Nginx, curl http://appserver will not work unless explicitly add a DNS entry or a host mapping (e.g., in /etc/hosts) for appserver.
        }
    }
}

