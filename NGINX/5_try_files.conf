# try_files checks the existence of one or more files or paths in order, serving the first one that exists. If none of the specified files or paths exist, it redirects the request to a fallback location or URI.

# docker container  run --name mynginx -v ./bloggingtemplate:/usr/share/nginx/html -v ./5_try_files.conf:/etc/nginx/nginx.conf  -d -p 80:80 nginx:1.27.0
events {
}

http {

    include mime.types;

    server {
        listen 80;
        server_name localhost;
        root /usr/share/nginx/html/;

    # always show the message defined in the /welcome location, no matter what URL is used. Because /testobject does not exist, so the try_files directive will always redirect to /welcome
        # try_files /testobject /welcome;

    # will show image for all request except URL /welcome
        # try_files /assets/images/about/old.jpg /welcome;

    # $uri is a variable that represents the current URI of the request, including the path and any query string
    # If the file or directory corresponding to the current request URL $uri does not exist, will show file old.jpg. If neither $uri nor /assets/images/about/old.jpg exists, the request is redirected to /welcome
        # try_files $uri /assets/images/about/old.jpg /welcome;

        location /welcome {
            return 200 "You can see this text because /testobject doesn't exist";
        }
         
    # Display the current URL if it exists; if the path is incorrect, display an "ERROR 404" message.
    # curl -I http://localhost/any_path will return code 404
        try_files $uri /404;

        location /404 {
            return 404 "ERROR 404: This resource doesn't exist :-(";
        }

    }
}

