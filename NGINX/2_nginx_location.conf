# location defines a block of rules for handling requests that match the given URL path.
events {
}

http {

    include mime.types;

    server {
        listen 80;
        server_name localhost;
        root /tmp/bloggingtemplate/;

        # Without the location block, Nginx would try to serve a static file from the directory specified by the root directive (e.g., /tmp/bloggingtemplate/contact)
        # When a client accesses http://localhost/contact (and any subpathes contact*, contacting, contact/test, contact/* etc.), Nginx routes that request to this location block and return the specified text
        location /contact {
            return 200 "Hello, you can now see this text instead of a 404 error when accessing the link http://localhost/contact and any URI starting with /contact* but it case senstive and doesn't match Contact*, cOnctact* etc.";
        }

        location = /equal {
            return 200 "You can see this text when request URI exactly matches the link http://localhost/equal";
        }
        location /equal {
            return 200 "You can use the same URI path but with different rules. You can see this message when access the link where URI starting with /equal*";
        }


        location ~ /tilda {
            return 200 "You can see this text when requested URI interpreted as a case-sensitive regular expression matching the link http://localhost/tilda and any URI starting with /tilda* but not /Tilda, /tIlda etc.";
        }

        location ~* /tilda_asterisk {
            return 200 "You can see this text when requested URI interpreted as a case-insensitive regular expression matching the link http://localhost/tilda_asterisk and any URI starting with /tilda_asterisk* include /Tilda_asterisk, /tIlda_asterisk etc.";
        }


        location ^~ /tilda_carat/ {
            return 200 "Matching a specific path prefix and prevent further processing of other locations, especially regular expression-based ones";
        }
        location ~ /tilda_carat/test1 {
            return 200 "You will never see this text because ^~ has higher priority, and NGINX will display the previous message";
        }
        location = /tilda_carat/test2 {
            return 200 "You will see this text because = has higher priority then ^~";
        }
    }
}
